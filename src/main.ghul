namespace Tester is
    use System.Exception;
    use System.Text.StringBuilder;
    use System.Text.UTF8Encoding;

    use Collections.Iterable;
    use Collections.List;
    use Collections.MutableList;
    use Collections.LIST;

    use IO.Std;
    use IO.Directory;
    use IO.File;

    class Main is
        _host_environment: HOST_ENVIRONMENT;  
        _compiler_under_test: COMPILER_UNDER_TEST;
        _queue: TEST_QUEUE;

        _arguments: string[] static;

        entry(arguments: string[]) -> int static is
            Std.output_encoding = new UTF8Encoding();

            if arguments.count == 0 then
                Std.write_line("usage: ghul-test <test-folder>...");
                return 1;
            fi

            _arguments = arguments;

            IoC.initialize();

            return IoC.get`[Main]().run();
        si
        
        init(
            host_environment: HOST_ENVIRONMENT,
            compiler_under_test: COMPILER_UNDER_TEST,
            queue: TEST_QUEUE
        ) is
            _host_environment = host_environment;
            _compiler_under_test = compiler_under_test;
            _queue = queue;
        si

        run() -> int is
            for path in _arguments do
                if !Directory.exists(path) then
                    Std.write_line("not a directory: " + path);
                    return 1;
                fi
                
                _queue.try_queue_tests(path);
            od

            _queue.run_queued_tests();

            Std.write_line("" + _queue.count + " tests discovered");
            Std.write_line("" + _queue.executed_count + " tests enabled");
            Std.write_line("" + _queue.pass_count + "/" + _queue.executed_count + " tests passed");

            if _queue.fail_count == 0 then
                Std.write_line("" + cast char(9989) + " all tests passed " + cast char(9989));
                return 0;
            fi
            
            Std.write_line("" + cast char(10060) + " " + _queue.fail_count + " tests failed " + cast char(10060));

            return 1;
        si
    si
si